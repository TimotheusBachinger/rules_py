# Cut a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`
# and put the release notes into the commit message for the tag.
name: Release

on:
  push:
    tags:
      - "v[0-9]+.*"

jobs:
  create-release:
    # See https://github.com/actions/runner-images?tab=readme-ov-file#available-images
    # But our billing plan doesn't allow
    # runs-on: macos-13-xlarge
    # which would give us ARM64 mac runner
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Mount bazel caches
        uses: actions/cache@v3
        with:
          path: |
            "~/.cache/bazel"
            "~/.cache/bazel-repo"
          key: bazel-cache-${{ hashFiles('**/BUILD.bazel', '**/*.bzl', 'WORKSPACE') }}
          restore-keys: bazel-cache-

      - name: Build release artifacts
        env:
          DESTDIR: /tmp/aspect/release
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            >&2 echo "ERROR: the git state is not clean, aborting build..."
            exit 1
          fi
          rm -rf ${{ env.DESTDIR }}
          bazel --bazelrc=.github/workflows/ci.bazelrc \
            run //tools/release:copy_release_artifacts

      - name: Prepare release
        run: .github/workflows/release_prep.sh ${{ env.GITHUB_REF_NAME }} > release_notes.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          # Use GH feature to populate the changelog automatically
          generate_release_notes: true
          body_path: release_notes.txt
          files: |
            /tmp/aspect/release/*
            rules_py-*.tar.gz
          fail_on_unmatched_files: true
